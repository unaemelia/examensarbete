{
  "SchemaVersion": 2,
  "CreatedAt": "2025-04-28T13:04:36.7214929+02:00",
  "ArtifactName": "secuflow:v3",
  "ArtifactType": "container_image",
  "Metadata": {
    "OS": {
      "Family": "alpine",
      "Name": "3.21.3"
    },
    "ImageID": "sha256:1653cf2471c6998f4523ab92454ac92a3f357a3237ee654b14e508ac99423fa3",
    "DiffIDs": [
      "sha256:08000c18d16dadf9553d747a58cf44023423a9ab010aab96cf263d2216b8b350",
      "sha256:491263f770a01cdac82e50a8886f3f1989e8bb3c94555904d4004ab8f1ed92e3",
      "sha256:1fbaeadd0784fba52b5dcd06eaf0f64760f6396fc21e9598e7851c1d69f671fa",
      "sha256:a42ba4b8cb0c69fe784a8adf128c3f7814b363488cb3baeb48110b4e9e6447f6",
      "sha256:54e974b472641df381a6280724a0f6059e9f1d9c1f27d5f9841d3b235370b838",
      "sha256:3f2a3747746df66b8eb676b007fd2b2e2ce1e554ccd8b543d47a773c89d88eaf",
      "sha256:0b22cb25c38c64d43fbf3bad31ebb8e4493eafb6691153c3ed8b382dfdc1d5f7",
      "sha256:d34a686321f9d5748ebdf2babf227b427874a34f325420716e44a74bb2c8ed86",
      "sha256:caf498747ffb490a71bba7205bce6a5a5ddc5c6726e32a8fa4970ea4fb1eb1cc"
    ],
    "RepoTags": [
      "secuflow:v3"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2025-04-28T08:32:26.484510845Z",
      "history": [
        {
          "created": "2025-02-14T03:28:36Z",
          "created_by": "ADD alpine-minirootfs-3.21.3-x86_64.tar.gz / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-02-14T03:28:36Z",
          "created_by": "CMD [\"/bin/sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "ENV NODE_VERSION=22.15.0",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "RUN /bin/sh -c addgroup -g 1000 node     \u0026\u0026 adduser -u 1000 -G node -s /bin/sh -D node     \u0026\u0026 apk add --no-cache         libstdc++     \u0026\u0026 apk add --no-cache --virtual .build-deps         curl     \u0026\u0026 ARCH= OPENSSL_ARCH='linux*' \u0026\u0026 alpineArch=\"$(apk --print-arch)\"       \u0026\u0026 case \"${alpineArch##*-}\" in         x86_64) ARCH='x64' CHECKSUM=\"60198941802e88659bb3b30b9a45b694b1c695cf33c1ef58863f854996d11d5d\" OPENSSL_ARCH=linux-x86_64;;         x86) OPENSSL_ARCH=linux-elf;;         aarch64) OPENSSL_ARCH=linux-aarch64;;         arm*) OPENSSL_ARCH=linux-armv4;;         ppc64le) OPENSSL_ARCH=linux-ppc64le;;         s390x) OPENSSL_ARCH=linux-s390x;;         *) ;;       esac   \u0026\u0026 if [ -n \"${CHECKSUM}\" ]; then     set -eu;     curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\";     echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c -       \u0026\u0026 tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner       \u0026\u0026 ln -s /usr/local/bin/node /usr/local/bin/nodejs;   else     echo \"Building from source\"     \u0026\u0026 apk add --no-cache --virtual .build-deps-full         binutils-gold         g++         gcc         gnupg         libgcc         linux-headers         make         python3         py-setuptools     \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"     \u0026\u0026 for key in       C0D6248439F1D5604AAFFB4021D900FFDB233756       DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7       CC68F5A3106FF448322E48ED27F5E38D5B0A215F       8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600       890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4       C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C       108F52B48DB57BB0CC439B2997B01419BD92F80A       A363A499291CBBC940DD62E41F10027AF002F8B0     ; do       gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||       gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;     done     \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\"     \u0026\u0026 gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc     \u0026\u0026 gpgconf --kill all     \u0026\u0026 rm -rf \"$GNUPGHOME\"     \u0026\u0026 grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -     \u0026\u0026 tar -xf \"node-v$NODE_VERSION.tar.xz\"     \u0026\u0026 cd \"node-v$NODE_VERSION\"     \u0026\u0026 ./configure     \u0026\u0026 make -j$(getconf _NPROCESSORS_ONLN) V=     \u0026\u0026 make install     \u0026\u0026 apk del .build-deps-full     \u0026\u0026 cd ..     \u0026\u0026 rm -Rf \"node-v$NODE_VERSION\"     \u0026\u0026 rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt;   fi   \u0026\u0026 rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"   \u0026\u0026 find /usr/local/include/node/openssl/archs -mindepth 1 -maxdepth 1 ! -name \"$OPENSSL_ARCH\" -exec rm -rf {} \\;   \u0026\u0026 apk del .build-deps   \u0026\u0026 node --version   \u0026\u0026 npm --version   \u0026\u0026 rm -rf /tmp/* # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "ENV YARN_VERSION=1.22.22",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "RUN /bin/sh -c apk add --no-cache --virtual .build-deps-yarn curl gnupg tar   \u0026\u0026 export GNUPGHOME=\"$(mktemp -d)\"   \u0026\u0026 for key in     6A010C5166006599AA17F08146C2130DFD2497F5   ; do     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" ||     gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ;   done   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\"   \u0026\u0026 curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\"   \u0026\u0026 gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 gpgconf --kill all   \u0026\u0026 rm -rf \"$GNUPGHOME\"   \u0026\u0026 mkdir -p /opt   \u0026\u0026 tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn   \u0026\u0026 ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg   \u0026\u0026 rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz   \u0026\u0026 apk del .build-deps-yarn   \u0026\u0026 yarn --version   \u0026\u0026 rm -rf /tmp/* # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "COPY docker-entrypoint.sh /usr/local/bin/ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "ENTRYPOINT [\"docker-entrypoint.sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-23T08:50:54Z",
          "created_by": "CMD [\"node\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-25T07:50:14Z",
          "created_by": "ENV NODE_ENV=production",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-25T07:50:14Z",
          "created_by": "WORKDIR /usr/src/app",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-25T12:05:07Z",
          "created_by": "COPY package.json package-lock.json* npm-shrinkwrap.json* ./ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-25T12:05:09Z",
          "created_by": "RUN /bin/sh -c npm install --production --silent \u0026\u0026 mv node_modules ../ # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-28T08:32:25Z",
          "created_by": "COPY . . # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-28T08:32:25Z",
          "created_by": "EXPOSE map[3000/tcp:{}]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-28T08:32:26Z",
          "created_by": "RUN /bin/sh -c chown -R node /usr/src/app # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-04-28T08:32:26Z",
          "created_by": "USER node",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-04-28T08:32:26Z",
          "created_by": "CMD [\"npm\" \"start\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:08000c18d16dadf9553d747a58cf44023423a9ab010aab96cf263d2216b8b350",
          "sha256:491263f770a01cdac82e50a8886f3f1989e8bb3c94555904d4004ab8f1ed92e3",
          "sha256:1fbaeadd0784fba52b5dcd06eaf0f64760f6396fc21e9598e7851c1d69f671fa",
          "sha256:a42ba4b8cb0c69fe784a8adf128c3f7814b363488cb3baeb48110b4e9e6447f6",
          "sha256:54e974b472641df381a6280724a0f6059e9f1d9c1f27d5f9841d3b235370b838",
          "sha256:3f2a3747746df66b8eb676b007fd2b2e2ce1e554ccd8b543d47a773c89d88eaf",
          "sha256:0b22cb25c38c64d43fbf3bad31ebb8e4493eafb6691153c3ed8b382dfdc1d5f7",
          "sha256:d34a686321f9d5748ebdf2babf227b427874a34f325420716e44a74bb2c8ed86",
          "sha256:caf498747ffb490a71bba7205bce6a5a5ddc5c6726e32a8fa4970ea4fb1eb1cc"
        ]
      },
      "config": {
        "Cmd": [
          "npm",
          "start"
        ],
        "Entrypoint": [
          "docker-entrypoint.sh"
        ],
        "Env": [
          "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "NODE_VERSION=22.15.0",
          "YARN_VERSION=1.22.22",
          "NODE_ENV=production"
        ],
        "User": "node",
        "WorkingDir": "/usr/src/app",
        "ExposedPorts": {
          "3000": {}
        },
        "ArgsEscaped": true
      }
    }
  },
  "Results": [
    {
      "Target": "secuflow:v3 (alpine 3.21.3)",
      "Class": "os-pkgs",
      "Type": "alpine"
    },
    {
      "Target": "Node.js",
      "Class": "lang-pkgs",
      "Type": "node-pkg"
    }
  ]
}
